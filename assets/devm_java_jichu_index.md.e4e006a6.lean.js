import{_ as l,c as i,o as n,d as e,a}from"./app.1cd524f6.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"基础规定和语法","slug":"基础规定和语法","link":"#基础规定和语法","children":[{"level":3,"title":"Java 常量","slug":"java-常量","link":"#java-常量","children":[]},{"level":3,"title":"JSR JCP 是啥","slug":"jsr-jcp-是啥","link":"#jsr-jcp-是啥","children":[]},{"level":3,"title":"布尔运算","slug":"布尔运算","link":"#布尔运算","children":[]},{"level":3,"title":"字符和字符串","slug":"字符和字符串","link":"#字符和字符串","children":[]},{"level":3,"title":"字符串连接","slug":"字符串连接","link":"#字符串连接","children":[]},{"level":3,"title":"从Java 13开始，字符串可以用\\"\\"\\"...\\"\\"\\"表示多行字符串（Text Blocks）了","slug":"从java-13开始-字符串可以用-表示多行字符串-text-blocks-了","link":"#从java-13开始-字符串可以用-表示多行字符串-text-blocks-了","children":[]},{"level":3,"title":"数组变量","slug":"数组变量","link":"#数组变量","children":[]},{"level":3,"title":"Java的格式化功能提供了多种占位符，可以把各种数据类型“格式化”成指定的字符串：","slug":"java的格式化功能提供了多种占位符-可以把各种数据类型-格式化-成指定的字符串","link":"#java的格式化功能提供了多种占位符-可以把各种数据类型-格式化-成指定的字符串","children":[]},{"level":3,"title":"要判断引用类型的变量内容是否相等，必须使用equals()方法","slug":"要判断引用类型的变量内容是否相等-必须使用equals-方法","link":"#要判断引用类型的变量内容是否相等-必须使用equals-方法","children":[]},{"level":3,"title":"while循环语句就是让计算机根据条件做循环计算，在条件满足时继续循环，条件不满足时退出循环。","slug":"while循环语句就是让计算机根据条件做循环计算-在条件满足时继续循环-条件不满足时退出循环。","link":"#while循环语句就是让计算机根据条件做循环计算-在条件满足时继续循环-条件不满足时退出循环。","children":[]},{"level":3,"title":"在Java中，while循环是先判断循环条件，再执行循环。而另一种do while循环则是先执行循环，再判断条件，条件满足时继续循环，条件不满足时退出。它的用法是","slug":"在java中-while循环是先判断循环条件-再执行循环。而另一种do-while循环则是先执行循环-再判断条件-条件满足时继续循环-条件不满足时退出。它的用法是","link":"#在java中-while循环是先判断循环条件-再执行循环。而另一种do-while循环则是先执行循环-再判断条件-条件满足时继续循环-条件不满足时退出。它的用法是","children":[]},{"level":3,"title":"冒泡排序","slug":"冒泡排序","link":"#冒泡排序","children":[]},{"level":3,"title":"命令行參數","slug":"命令行參數","link":"#命令行參數","children":[]},{"level":3,"title":"JAVA 字符的方法","slug":"java-字符的方法","link":"#java-字符的方法","children":[]},{"level":3,"title":"为了让编译器能自动检查某个值在枚举的集合内，并且，不同用途的枚举需要不同的类型来标记，不能混用，我们可以使用enum来定义枚举类：","slug":"为了让编译器能自动检查某个值在枚举的集合内-并且-不同用途的枚举需要不同的类型来标记-不能混用-我们可以使用enum来定义枚举类","link":"#为了让编译器能自动检查某个值在枚举的集合内-并且-不同用途的枚举需要不同的类型来标记-不能混用-我们可以使用enum来定义枚举类","children":[]},{"level":3,"title":"Math 类","slug":"math-类","link":"#math-类","children":[]},{"level":3,"title":"Lambad  (兰布达) 希娜字母的11","slug":"lambad-兰布达-希娜字母的11","link":"#lambad-兰布达-希娜字母的11","children":[]},{"level":3,"title":"多态","slug":"多态","link":"#多态","children":[]}]},{"level":2,"title":"继承 inherit","slug":"继承-inherit","link":"#继承-inherit","children":[{"level":3,"title":"重写 Override","slug":"重写-override","link":"#重写-override","children":[]},{"level":3,"title":"重载(Overload)","slug":"重载-overload","link":"#重载-overload","children":[]},{"level":3,"title":"抽象类","slug":"抽象类","link":"#抽象类","children":[]},{"level":3,"title":"封装  Encapsulation","slug":"封装-encapsulation","link":"#封装-encapsulation","children":[]}]},{"level":2,"title":"接口  interface","slug":"接口-interface","link":"#接口-interface","children":[]},{"level":2,"title":"枚举 enum","slug":"枚举-enum","link":"#枚举-enum","children":[{"level":3,"title":"包 package","slug":"包-package","link":"#包-package","children":[]},{"level":3,"title":"构造函数，","slug":"构造函数","link":"#构造函数","children":[]},{"level":3,"title":"java 的数据结构","slug":"java-的数据结构","link":"#java-的数据结构","children":[]}]},{"level":2,"title":"数据结构","slug":"数据结构","link":"#数据结构","children":[{"level":3,"title":"socket 通信","slug":"socket-通信","link":"#socket-通信","children":[]}]},{"level":2,"title":"","slug":"","link":"#","children":[{"level":3,"title":"调用另一个文件的类","slug":"调用另一个文件的类","link":"#调用另一个文件的类","children":[]},{"level":3,"title":"set是一种常见的命名约定，用于设置对象的属性或配置。它通常用于通过方法调用来设置对象的属性值","slug":"set是一种常见的命名约定-用于设置对象的属性或配置。它通常用于通过方法调用来设置对象的属性值","link":"#set是一种常见的命名约定-用于设置对象的属性或配置。它通常用于通过方法调用来设置对象的属性值","children":[]}]}],"relativePath":"devm/java/jichu/index.md"}'),t={name:"devm/java/jichu/index.md"},s=e("",95),r=a("blockquote",{"css-module":"."},[a("p",null,"用静态公有方法的语法是：类名.方法名(参数...); 所以，比如另一个类叫OtherClass，它的静态公有方法是 public static int MethodA()")],-1),h=e("",5),d=[s,r,h];function c(p,o,u,v,b,k){return n(),i("div",null,d)}const m=l(t,[["render",c]]);export{f as __pageData,m as default};
