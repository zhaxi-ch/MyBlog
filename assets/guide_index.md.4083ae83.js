import{_ as a,c as t,o as e,d as i}from"./app.60944cd0.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"XML 和 JSON","slug":"xml-和-json","link":"#xml-和-json","children":[]},{"level":3,"title":"JSON是JavaScript Object Notation的缩写，它去除了所有JavaScript执行代码，只保留JavaScript的对象格式。一个典型的JSON如下：","slug":"json是javascript-object-notation的缩写-它去除了所有javascript执行代码-只保留javascript的对象格式。一个典型的json如下","link":"#json是javascript-object-notation的缩写-它去除了所有javascript执行代码-只保留javascript的对象格式。一个典型的json如下","children":[]}],"relativePath":"guide/index.md"}'),n={name:"guide/index.md"},s=i('<h3 id="xml-和-json" tabindex="-1">XML 和 JSON <a class="header-anchor" href="#xml-和-json" aria-hidden="true">#</a></h3><p>XML是可扩展标记语言（eXtensible Markup Language）的缩写，它是一种数据表示格式，可以描述非常复杂的数据结构，常用于传输和存储数据。</p><p>XML是一个技术体系，除了我们经常用到的XML文档本身外，XML还支持：</p><p>DTD和XSD：验证XML结构和数据是否有效；</p><p>Namespace：XML节点和属性的名字空间；</p><p>XSLT：把XML转化为另一种文本；</p><p>XPath：一种XML节点查询语言；</p><h3 id="json是javascript-object-notation的缩写-它去除了所有javascript执行代码-只保留javascript的对象格式。一个典型的json如下" tabindex="-1">JSON是JavaScript Object Notation的缩写，它去除了所有JavaScript执行代码，只保留JavaScript的对象格式。一个典型的JSON如下： <a class="header-anchor" href="#json是javascript-object-notation的缩写-它去除了所有javascript执行代码-只保留javascript的对象格式。一个典型的json如下" aria-hidden="true">#</a></h3><p>JSON作为数据传输的格式，有几个显著的优点：</p><p>JSON只允许使用UTF-8编码，不存在编码问题；</p><p>JSON只允许使用双引号作为key，特殊字符用\\转义，格式简单；</p><p>浏览器内置JSON支持，如果把数据用JSON发送给浏览器，可以用JavaScript直接处理。</p>',12),o=[s];function p(c,r,d,j,l,_){return e(),t("div",null,o)}const h=a(n,[["render",p]]);export{v as __pageData,h as default};
