import{_ as t,c as i,o as a,a as e}from"./app.ccaf1cc7.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"git相关的内容","slug":"git相关的内容","link":"#git相关的内容","children":[{"level":3,"title":"git init","slug":"git-init","link":"#git-init","children":[]},{"level":3,"title":"git add","slug":"git-add","link":"#git-add","children":[]}]}],"relativePath":"study/git/index.md"}'),n={name:"study/git/index.md"},s=e(`<h2 id="git相关的内容" tabindex="-1">git相关的内容 <a class="header-anchor" href="#git相关的内容" aria-hidden="true">#</a></h2><h3 id="git-init" tabindex="-1">git init <a class="header-anchor" href="#git-init" aria-hidden="true">#</a></h3><p>git init 是 Git 命令之一，用于在当前目录中初始化一个新的 Git 仓库。执行 git init 命令后，Git 会在当前目录中创建一个名为 .git 的子目录，用于存储 Git 仓库的相关信息。这些信息包括版本历史记录、分支、标签等等。在执行 git init 命令后，您可以使用其他 Git 命令来管理和维护您的代码库</p><h3 id="git-add" tabindex="-1">git add <a class="header-anchor" href="#git-add" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">是 Git 命令之一，用于将当前目录中的所有文件添加到 Git 仓库的暂存区。执行 git add . </span></span>
<span class="line"><span style="color:#A6ACCD;">命令后，Git 会将当前目录中的所有文件添加到暂存区，但不会将它们提交到版本库中。这意味</span></span>
<span class="line"><span style="color:#A6ACCD;">着您可以在提交之前对文件进行更改或编辑。如果您只想添加特定的文件，可以使用 git add &lt;file&gt; 命令，其中 &lt;file&gt; 是要添加的文件名 </span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,5),l=[s];function d(r,c,o,g,p,h){return a(),i("div",null,l)}const f=t(n,[["render",d]]);export{u as __pageData,f as default};
