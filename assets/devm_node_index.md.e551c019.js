import{_ as e,c as a,o as d,d as n}from"./app.23af963e.js";const o="/MyBlog/assets/image032.bb4eb924.png",t="/MyBlog/assets/image033.09a89789.png",i="/MyBlog/assets/image034.4101fcf5.png",f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"node 的相关操作","slug":"node-的相关操作","link":"#node-的相关操作","children":[{"level":3,"title":"node  JS  是什么？","slug":"node-js-是什么","link":"#node-js-是什么","children":[]},{"level":3,"title":"node 的工具","slug":"node-的工具","link":"#node-的工具","children":[]}]}],"relativePath":"devm/node/index.md"}'),r={name:"devm/node/index.md"},s=n(`<h2 id="node-的相关操作" tabindex="-1">node 的相关操作 <a class="header-anchor" href="#node-的相关操作" aria-hidden="true">#</a></h2><h3 id="node-js-是什么" tabindex="-1">node JS 是什么？ <a class="header-anchor" href="#node-js-是什么" aria-hidden="true">#</a></h3><pre><code> JavaScript 诞生于 1995 年，几乎是和互联网同时出现；Node.js 诞生于 2009 年，比 JavaScript 晚了 15 年左右。
</code></pre><p>在 Node.js 之前，JavaScript 只能运行在浏览器中，作为网页脚本使用，为网页添加一些特效，或者和服务器进行通信。有了 Node.js 以后，JavaScript 就可以脱离浏览器，像其它编程语言一样直接在计算机上使用，想干什么就干什么，再也不受浏览器的限制了。</p><p>Node.js 不是一门新的编程语言，也不是一个 JavaScript 框架，它是一套 JavaScript 运行环境，用来支持 JavaScript 代码的执行。用编程术语来讲，Node.js 是一个 JavaScript 运行时（Runtime）</p><p><img src="`+o+'" alt="!NodeJS"></p><p><img src="'+t+'" alt="!NodeJS"></p><p><img src="'+i+'" alt="NodeJS"></p><h3 id="node-的工具" tabindex="-1">node 的工具 <a class="header-anchor" href="#node-的工具" aria-hidden="true">#</a></h3><h4 id="_3-1-pm2是node进程管理工具-可以利用它来简化很多node应用管理的繁琐任务-如性能监控、自动重启、负载均衡等-而且使用非常简单。" tabindex="-1">3.1 PM2是node进程管理工具，可以利用它来简化很多node应用管理的繁琐任务，如性能监控、自动重启、负载均衡等，而且使用非常简单。 <a class="header-anchor" href="#_3-1-pm2是node进程管理工具-可以利用它来简化很多node应用管理的繁琐任务-如性能监控、自动重启、负载均衡等-而且使用非常简单。" aria-hidden="true">#</a></h4><p><code>npm install -g pm2 全局安装pm2 </code></p><h4 id="_3-2-启动的时候带入名字" tabindex="-1">3.2 启动的时候带入名字 <a class="header-anchor" href="#_3-2-启动的时候带入名字" aria-hidden="true">#</a></h4><p><code> pm2 start app.js --name tetApi </code></p>',13),c=[s];function p(l,h,_,m,S,g){return d(),a("div",null,c)}const u=e(r,[["render",p]]);export{f as __pageData,u as default};
