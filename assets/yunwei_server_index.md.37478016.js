import{_ as e,c as n,o as i,d as r}from"./app.1a495af9.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"服务器侧运维","slug":"服务器侧运维","link":"#服务器侧运维","children":[]},{"level":3,"title":"Centos 下搭建DNS服务器","slug":"centos-下搭建dns服务器","link":"#centos-下搭建dns服务器","children":[]},{"level":3,"title":"Hrony  时间同步软件","slug":"hrony-时间同步软件","link":"#hrony-时间同步软件","children":[]},{"level":3,"title":"代理上网服务器的开源实现","slug":"代理上网服务器的开源实现","link":"#代理上网服务器的开源实现","children":[]}],"relativePath":"yunwei/server/index.md"}'),d={name:"yunwei/server/index.md"},t=r('<h3 id="服务器侧运维" tabindex="-1">服务器侧运维 <a class="header-anchor" href="#服务器侧运维" aria-hidden="true">#</a></h3><h3 id="centos-下搭建dns服务器" tabindex="-1">Centos 下搭建DNS服务器 <a class="header-anchor" href="#centos-下搭建dns服务器" aria-hidden="true">#</a></h3><p>Bind 是一款开源的 DNS 服务器软件，由美国加州大学 Berkeley 分校开发和维护的，按照 ISC 的调查报告，BIND 是世界上使用最多最广泛的域名服务系统，使用它代替Windows下的DNS</p><p>Red Hat Linux的各个版本已经包含DNS服务器的软件--Bind，一般不需要用户另行安装 软件包的功能</p><p>Bind：提供了域名服务的主要程序以及相关文件。</p><p>Bind-utils:提供了对DNS服务器的测试工具程序（nslookupdup、dig等）</p><p>Bind-chroot:为Bind提供了一个伪装的根目录以增强安全性</p><p>Caching-namserver:为配置Bind作为缓存域名服务器提供必要的默认配置文件，</p><p>查询本机是否有bind rpm -qa | grep bind</p><blockquote><p>dns服务有什么用呢，尤其是内网的dns服务，其实用处还蛮大的，我见过的典型使用，是数据库跨机房多活。 如某mysql主机搭建在深圳机房，为了保证高可用，那我们可以给这台主库，维护多个深圳同城的跨机房半同步备机，在异地如上海还可以维护一个异步备机。当主机出问题时候，我们可以切换到备机去，而切换了之后，ip肯定就变了，此时就不得不要求客户端修改ip，非常麻烦。 一个可选的方案就是，给客户端服务提供一个域名，客户端服务通过域名获取对应的ip，然后再去和该ip建立连接。当数据库发生主备切换时，只需要修改dns服务端，把域名对应的ip进行修改，同时通知客户端服务进行重连（重连时就可以取到最新的ip），这样的话，不就可以做到数据库容灾切换，且不需要业务方修改配置了</p></blockquote><h3 id="hrony-时间同步软件" tabindex="-1">Hrony 时间同步软件 <a class="header-anchor" href="#hrony-时间同步软件" aria-hidden="true">#</a></h3><p>hrony是一款开源的网络时间同步软件，它可以通过网络协议（如NTP、UDP、TCP等）与时间服务器进行通信，从而同步本地系统的时间。与传统的NTP软件相比，chrony具有更高的精度和更快的同步速度，同时还支持多种时钟源和时钟调整算法，可以适应不同的网络环境和需求。在CentOS上安装chrony非常简单，只需要在终端中执行以下命令即可：</p><h3 id="代理上网服务器的开源实现" tabindex="-1">代理上网服务器的开源实现 <a class="header-anchor" href="#代理上网服务器的开源实现" aria-hidden="true">#</a></h3>',13),a=[t];function s(o,h,l,c,p,_){return i(),n("div",null,a)}const S=e(d,[["render",s]]);export{y as __pageData,S as default};
